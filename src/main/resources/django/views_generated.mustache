{{>partial_header}}

from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework import status
from rest_framework import permissions 
from rest_framework import mixins
from rest_framework import generics
from rest_framework_bulk import BulkCreateModelMixin
from . import serializers
{{#models}}{{#model}}from .models.{{classname}} import {{classname}}
{{/model}}{{/models}}
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}{{^vendorExtensions.x-operation-ignore}}{{#vendorExtensions.operationSource}}
class {{operationId}}({{#vendorExtensions.operationParameters}}{{{vendorExtensions.operationParameters}}}{{/vendorExtensions.operationParameters}}{{^vendorExtensions.operationParameters}}APIView{{/vendorExtensions.operationParameters}}):
  """  
  {{{summary}}}  
  """
  lookup_field = 'id'
  permission_classes = (permissions.AllowAny,){{#vendorExtensions.model}}  
  queryset = {{vendorExtensions.model}}.objects.all(){{/vendorExtensions.model}}{{#vendorExtensions.serializer}}  
  serializer_class = serializers.{{vendorExtensions.serializer}}{{/vendorExtensions.serializer}}{{#vendorExtensions.operationSource}}
{{{vendorExtensions.operationSource}}}{{/vendorExtensions.operationSource}}{{^vendorExtensions.operationSource}}  
  def {{httpMethod}}(self, request, {{#allParams}}{{paramName}}{{^required}} = None{{/required}}{{#hasMore}}, {{/hasMore}}{{/allParams}}):
    return {{#vendorExtensions.operationReturn}}self.{{{vendorExtensions.operationReturn}}}(request, {{#allParams}}{{paramName}}{{^required}} = None{{/required}}{{#hasMore}}, {{/hasMore}}{{/allParams}}){{/vendorExtensions.operationReturn}}{{^vendorExtensions.operationReturn}}Response(){{/vendorExtensions.operationReturn}}{{/vendorExtensions.operationSource}}
{{/vendorExtensions.operationSource}}{{/vendorExtensions.x-operation-ignore}}{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

